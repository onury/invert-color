{"version":3,"file":"invert.js","sources":["invert.js"],"sourcesContent":["// -------------------------------\n// TYPES / INTERFACES\n// -------------------------------\n// -------------------------------\n// CONSTANTS\n// -------------------------------\nvar DEFAULT_THRESHOLD = Math.sqrt(1.05 * 0.05) - 0.05;\nvar RE_HEX = /^(?:[0-9a-f]{3}){1,2}$/i;\nvar DEFAULT_BW = {\n    black: '#000000',\n    white: '#ffffff',\n    threshold: DEFAULT_THRESHOLD\n};\n// -------------------------------\n// HELPER METHODS\n// -------------------------------\nfunction padz(str, len) {\n    if (len === void 0) { len = 2; }\n    return (new Array(len).join('0') + str).slice(-len);\n}\nfunction hexToRgbArray(hex) {\n    if (hex.slice(0, 1) === '#')\n        hex = hex.slice(1);\n    if (!RE_HEX.test(hex))\n        throw new Error(\"Invalid HEX color: \\\"\" + hex + \"\\\"\");\n    // normalize / convert 3-chars hex to 6-chars.\n    if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    return [\n        parseInt(hex.slice(0, 2), 16),\n        parseInt(hex.slice(2, 4), 16),\n        parseInt(hex.slice(4, 6), 16) // b\n    ];\n}\nfunction toRGB(c) {\n    return { r: c[0], g: c[1], b: c[2] };\n}\nfunction toRgbArray(c) {\n    if (!c)\n        throw new Error('Invalid color value');\n    if (Array.isArray(c))\n        return c;\n    return typeof c === 'string' ? hexToRgbArray(c) : [c.r, c.g, c.b];\n}\n// http://stackoverflow.com/a/3943023/112731\nfunction getLuminance(c) {\n    var i, x;\n    var a = []; // so we don't mutate\n    for (i = 0; i < c.length; i++) {\n        x = c[i] / 255;\n        a[i] = x <= 0.03928 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n    }\n    return 0.2126 * a[0] + 0.7152 * a[1] + 0.0722 * a[2];\n}\nfunction invertToBW(color, bw, asArr) {\n    var options = (bw === true)\n        ? DEFAULT_BW\n        : Object.assign({}, DEFAULT_BW, bw);\n    return getLuminance(color) > options.threshold\n        ? (asArr ? hexToRgbArray(options.black) : options.black)\n        : (asArr ? hexToRgbArray(options.white) : options.white);\n}\n// -------------------------------\n// PUBLIC MEMBERS\n// -------------------------------\n/**\n *  Generates inverted (opposite) version of the given color.\n *  @param {Color} color - Color to be inverted.\n *  @param {BlackWhite|boolean} [bw=false] - Whether to amplify the inversion to\n *  black or white. Provide an object to customize black/white colors.\n *  @returns {HexColor} - Hexadecimal representation of the inverted color.\n */\nfunction invert(color, bw) {\n    if (bw === void 0) { bw = false; }\n    var isRgbString = false;\n    var isRgbaString = false;\n    if (typeof color === 'string' && color.startsWith('rgb')) {\n        if (color.startsWith('rgba')) {\n            isRgbaString = true;\n        }\n        else {\n            isRgbString = true;\n        }\n    }\n    if (isRgbString) {\n        var matches = color.match(/rgb\\(([0-9 ]+),([0-9 ]+),([0-9 ]+)\\)/);\n        if (matches) {\n            var rgbArr = [\n                parseInt(matches[1]),\n                parseInt(matches[2]),\n                parseInt(matches[3]),\n            ];\n            rgbArr = bw\n                ? invertToBW(rgbArr, bw, true)\n                : rgbArr.map(function (c) { return 255 - c; });\n            return \"rgb(\" + rgbArr.join(',') + \")\";\n        }\n        else {\n            throw new Error('Invalid rgb color string: ' + color);\n        }\n    }\n    else if (isRgbaString) {\n        var matches = color.match(/rgba\\(([0-9 ]+),([0-9 ]+),([0-9 ]+),([0-9. ]+)\\)/);\n        if (matches) {\n            var rgbArr = [\n                parseInt(matches[1]),\n                parseInt(matches[2]),\n                parseInt(matches[3]),\n            ];\n            var alphaChannel = matches[4].replace(/\\s/g, '');\n            rgbArr = bw\n                ? invertToBW(rgbArr, bw, true)\n                : rgbArr.map(function (c) { return 255 - c; });\n            return \"rgba(\" + rgbArr.join(',') + \",\" + alphaChannel + \")\";\n        }\n        else {\n            throw new Error('Invalid rgba color string: ' + color);\n        }\n    }\n    else {\n        color = toRgbArray(color);\n        if (bw)\n            return invertToBW(color, bw);\n        return '#' + color.map(function (c) { return padz((255 - c).toString(16)); }).join('');\n    }\n}\n/**\n *  Utility methods to generate inverted version of a color.\n *  @namespace\n */\n(function (invert) {\n    /**\n     *  Generates inverted (opposite) version of the given color, as a RGB object.\n     *  @alias invert.asRgbObject\n     *  @param {Color} color - Color to be inverted.\n     *  @param {BlackWhite|boolean} [bw] - Whether to amplify the inversion to\n     *  black or white. Provide an object to customize black/white colors.\n     *  @returns {RGB} - RGB object representation of the inverted color.\n     */\n    function asRGB(color, bw) {\n        color = toRgbArray(color);\n        var list = bw\n            ? invertToBW(color, bw, true)\n            : color.map(function (c) { return 255 - c; });\n        return toRGB(list);\n    }\n    invert.asRGB = asRGB;\n    /**\n     *  Generates inverted (opposite) version of the given color, as a RGB array.\n     *  @param {Color} color - Color to be inverted.\n     *  @param {BlackWhite|boolean} [bw] - Whether to amplify the inversion to\n     *  black or white. Provide an object to customize black/white colors.\n     *  @returns {RGB} - RGB array representation of the inverted color.\n     */\n    function asRgbArray(color, bw) {\n        color = toRgbArray(color);\n        return bw\n            ? invertToBW(color, bw, true)\n            : color.map(function (c) { return 255 - c; });\n    }\n    invert.asRgbArray = asRgbArray;\n    /**\n     *  Default luminance threshold used for amplifying inversion to black and\n     *  white.\n     *  @type {number}\n     */\n    invert.defaultThreshold = DEFAULT_THRESHOLD;\n    /**\n     *  Alias of `.asRGB()`\n     */\n    invert.asRgbObject = asRGB;\n})(invert || (invert = {}));\n// -------------------------------\n// EXPORT\n// -------------------------------\nexport default invert;\n"],"names":[],"mappings":"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"}